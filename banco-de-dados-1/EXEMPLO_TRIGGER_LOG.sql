					  
-- Exemplo log completo
--Vamos supor que, por ordem da administração não seja permitido fazer alterações e 
--inserções na tabela BANCOS. Para garantir esta norma implemente um trigger que 
--dispare em resposta a comandos UPDATE e INSERT na tabela BANCOS. Esta trigger 
--deve emitir um aviso de que as alterações e inserções foram suspensas e registrar 
--em uma tabela o nome do usuário que tentou fazer a alteração e o nome do BANCO 
--que tentou-se alterar ou inserir.

-- CRIAÇÃO DA TABELA PARA REGISTRAR TENTATIVAS DE INSERÇÃO E ALTERAÇÃO
CREATE TABLE TENTOU_ALTERAR
( 
  		BANCO VARCHAR (50) NOT NULL,
  		USUARIO VARCHAR (30) NOT NULL,
		OPERACAO CHAR(1) NOT NULL
		REGISTRO_OLD TEXT NOT NULL,
		REGISTRO_NEW TEXT NOT NULL
);

-- CRIAÇÃO DA TRIGGER
CREATE OR REPLACE FUNCTION LOG_ALTERAINSERE_BANCOS() RETURNS TRIGGER AS $LOG_ALTERAINSERE_BANCOS$
-- VARIAVEL QUE SERÁ UTILIZADA NA TRIGGER
DECLARE VNOME_BANCO VARCHAR(50);
	VREGISTROOLD TEXT;
	VREGISTRONEW TEXT;
BEGIN
	-- VERIFICA SE FOI FEITA ALGUMA ALTERAÇÃO (UPDATE)
	IF (NEW.NOME IS NOT NULL AND OLD.NOME IS NOT NULL) THEN --TG_OP = 'UPDATE'
		VREGISTROOLD = OLD.CODBANCO ||','|| OLD.NOME || ',' || OLD.TELEFONE;
		VREGISTRONEW = NEW.CODBANCO ||','|| NEW.NOME || ',' || NEW.TELEFONE;
		INSERT INTO TENTOU_ALTERAR(BANCO,USUARIO,OPERACAO,REGISTRO_OLD, REGISTRO_NEW) VALUES (NEW.NOME, CURRENT_USER,'U',VREGISTROOLD,VREGISTRONEW);
		RAISE NOTICE 'LOG DE UPDATE GRAVADO.';
		RETURN NEW;
	END IF;
	-- VERIFICA SE FOI FEITA ALGUMA INSERÇÃO
	IF (NEW.NOME IS NOT NULL AND OLD.NOME ISNULL) THEN --TG_OP = 'INSERT'
		VREGISTROOLD = NULL;
		VREGISTRONEW = NEW.CODBANCO ||','|| NEW.NOME || ',' || NEW.TELEFONE;
		INSERT INTO TENTOU_ALTERAR(BANCO,USUARIO,OPERACAO, REGISTRO_OLD, REGISTRO_NEW) VALUES (NEW.NOME, CURRENT_USER,'I', VREGISTROOLD, VREGISTRONEW); 	
		RAISE NOTICE 'LOG DE INSERT GRAVADO.';
		RETURN NEW;
	END IF;
	--VERIFICA SE FOI FEITA ALGUMA DELEÇÃO
	IF (NEW.NOME ISNULL AND OLD.NOME IS NOT NULL) THEN --TG_OP = 'DELETE'
		VREGISTROOLD = OLD.CODBANCO ||','|| OLD.NOME || ',' || OLD.TELEFONE;
		VREGISTRONEW = NULL;
		INSERT INTO TENTOU_ALTERAR(BANCO,USUARIO,OPERACAO, REGISTRO_OLD, REGISTRO_NEW) VALUES (OLD.NOME, CURRENT_USER,'D', VREGISTROOLD, VREGISTRONEW); 	
		RAISE NOTICE 'LOG DE DELETE GRAVADO';
		RETURN OLD;
	END IF;
END;
$LOG_ALTERAINSERE_BANCOS$ LANGUAGE plpgsql;

CREATE TRIGGER TG_PERMITE_UF BEFORE INSERT OR UPDATE OR DELETE ON BANCOS
FOR EACH ROW EXECUTE PROCEDURE LOG_ALTERAINSERE_BANCOS();

-- TESTANDO O FUNCIONAMENTO DA TRIGGER COM INSERT
INSERT INTO BANCOS (NOME,RUA,NUMERO,BAIRRO, COMPLEMENTO,CODCIDADE)
VALUES ('TESTE TRIGGER','TESTE TRIGGER', 'TESTE', 'TESTE TRIGGER','TESTE',1);

-- TESTANDO O FUNCIONAMENTO DA TRIGGER COM UPDATE
UPDATE BANCOS SET NOME = 'TESTE TRIGGER' WHERE CODBANCO = 1

--TESTANDO O FUNCIONAMENTO DA TRIGGER COM DELETE
DELETE FROM BANCOS WHERE CODBANCO = 15

-- VERIFICANDO O QUE FOI INSERIDO NA TABELA DE LOG
SELECT * FROM TENTOU_ALTERAR

SELECT * FROM BANCOS
